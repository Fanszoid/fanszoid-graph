
type _Schema_
  @fulltext(
    name: "eventSearch"
    language: en
    algorithm: rank
    include: [{ entity: "Event", fields: [{ name: "title" }, { name: "description" }, { name: "website" }] }]
  )

type Event @entity {
  id: ID!
  tickets: [Ticket!]! @derivedFrom(field: "event")
  ticketBalances: [TicketBalance!]! @derivedFrom(field: "event")
  sentTickets: [Transfer!] @derivedFrom(field: "event")
  organizer: User!
  metadata: String
  attendees: BigInt!
  
  title: String!
  description: String
  type: String!
  category: String
  dclX: String
  dclY: String
  city: String
  postalCode: String
  socials: [SocialNetwork!] @derivedFrom(field: "event")
  email: String
  website: String
  isAvailable: String
  status: String
  inStock: String
  createdAt: String
  updatedAt: String
  image: String
  startDateUTC: BigInt
  endDateUTC: BigInt
}

type Ticket @entity {
  id: ID!
  event: Event
  creatorRoyalty: Int!
  isResellable: Boolean!
  totalAmount: Int!
  ticketBalances: [TicketBalance!]! @derivedFrom(field: "ticket")
  sentTickets: [Transfer!] @derivedFrom(field: "ticket")
  metadata: String

  name: String
  description: String
  image: String
}

type TicketBalance @entity {
  id: ID!
  ticket: Ticket!
  event: Event!
  askingPrice: BigInt
  amountOnSell: Int!
  amountOwned: Int!
  owner: User!
  isEventOwner: Boolean!
  sentTickets: [Transfer!] @derivedFrom(field: "senderBalance")
  receivedTickets: [Transfer!] @derivedFrom(field: "receiverBalance")
}

type User @entity {
  id: ID! # ETH addr
  address: Bytes!
  events: [Event!] @derivedFrom(field: "organizer")
  ticketBalances: [TicketBalance!] @derivedFrom(field: "owner")
  sentTickets: [Transfer!] @derivedFrom(field: "sender")
  receivedTickets: [Transfer!] @derivedFrom(field: "receiver")
}

# Fields are optional to make easier the entity setting/updating.
type Transfer @entity {
  id: ID!
  event: Event
  ticket: Ticket
  sender: User
  senderBalance: TicketBalance
  receiver: User
  receiverBalance: TicketBalance
  price: BigInt
  amount: Int
  isSale: Boolean
  createdAt: BigInt
}

type SocialNetwork @entity {
  id: ID!
  name: String!
  url: String
  event: Event!
}
