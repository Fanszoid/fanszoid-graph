// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AskRemoved extends ethereum.Event {
  get params(): AskRemoved__Params {
    return new AskRemoved__Params(this);
  }
}

export class AskRemoved__Params {
  _event: AskRemoved;

  constructor(event: AskRemoved) {
    this._event = event;
  }

  get seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AskSetted extends ethereum.Event {
  get params(): AskSetted__Params {
    return new AskSetted__Params(this);
  }
}

export class AskSetted__Params {
  _event: AskSetted;

  constructor(event: AskSetted) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get askingPrice(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class eventCreated extends ethereum.Event {
  get params(): eventCreated__Params {
    return new eventCreated__Params(this);
  }
}

export class eventCreated__Params {
  _event: eventCreated;

  constructor(event: eventCreated) {
    this._event = event;
  }

  get eventId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get organizer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get uri(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class eventDeleted extends ethereum.Event {
  get params(): eventDeleted__Params {
    return new eventDeleted__Params(this);
  }
}

export class eventDeleted__Params {
  _event: eventDeleted;

  constructor(event: eventDeleted) {
    this._event = event;
  }

  get eventId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get organizer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class eventEdited extends ethereum.Event {
  get params(): eventEdited__Params {
    return new eventEdited__Params(this);
  }
}

export class eventEdited__Params {
  _event: eventEdited;

  constructor(event: eventEdited) {
    this._event = event;
  }

  get eventId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get organizer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get uri(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class marketRoyaltyModified extends ethereum.Event {
  get params(): marketRoyaltyModified__Params {
    return new marketRoyaltyModified__Params(this);
  }
}

export class marketRoyaltyModified__Params {
  _event: marketRoyaltyModified;

  constructor(event: marketRoyaltyModified) {
    this._event = event;
  }

  get eventId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newRoyalty(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ticketBought extends ethereum.Event {
  get params(): ticketBought__Params {
    return new ticketBought__Params(this);
  }
}

export class ticketBought__Params {
  _event: ticketBought;

  constructor(event: ticketBought) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class FanszoidMarketplace__eventsResult {
  value0: Address;
  value1: string;

  constructor(value0: Address, value1: string) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    return map;
  }
}

export class FanszoidMarketplace__sellingRoyaltiesResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: Address, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class FanszoidMarketplace extends ethereum.SmartContract {
  static bind(address: Address): FanszoidMarketplace {
    return new FanszoidMarketplace("FanszoidMarketplace", address);
  }

  DEFAULT_MARKETPLACE_ROYALTY(): BigInt {
    let result = super.call(
      "DEFAULT_MARKETPLACE_ROYALTY",
      "DEFAULT_MARKETPLACE_ROYALTY():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_DEFAULT_MARKETPLACE_ROYALTY(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "DEFAULT_MARKETPLACE_ROYALTY",
      "DEFAULT_MARKETPLACE_ROYALTY():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MINIMUM_ASK(): BigInt {
    let result = super.call("MINIMUM_ASK", "MINIMUM_ASK():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MINIMUM_ASK(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("MINIMUM_ASK", "MINIMUM_ASK():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  askingPrices(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "askingPrices",
      "askingPrices(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_askingPrices(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "askingPrices",
      "askingPrices(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createEventForOrganizer(organizer: Address, uri: string): BigInt {
    let result = super.call(
      "createEventForOrganizer",
      "createEventForOrganizer(address,string):(uint256)",
      [ethereum.Value.fromAddress(organizer), ethereum.Value.fromString(uri)]
    );

    return result[0].toBigInt();
  }

  try_createEventForOrganizer(
    organizer: Address,
    uri: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createEventForOrganizer",
      "createEventForOrganizer(address,string):(uint256)",
      [ethereum.Value.fromAddress(organizer), ethereum.Value.fromString(uri)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  eventUri(eventId: BigInt): string {
    let result = super.call("eventUri", "eventUri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(eventId)
    ]);

    return result[0].toString();
  }

  try_eventUri(eventId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("eventUri", "eventUri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(eventId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  events(param0: BigInt): FanszoidMarketplace__eventsResult {
    let result = super.call("events", "events(uint256):(address,string)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return new FanszoidMarketplace__eventsResult(
      result[0].toAddress(),
      result[1].toString()
    );
  }

  try_events(
    param0: BigInt
  ): ethereum.CallResult<FanszoidMarketplace__eventsResult> {
    let result = super.tryCall("events", "events(uint256):(address,string)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FanszoidMarketplace__eventsResult(
        value[0].toAddress(),
        value[1].toString()
      )
    );
  }

  fansNFTContract(): Address {
    let result = super.call(
      "fansNFTContract",
      "fansNFTContract():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_fansNFTContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "fansNFTContract",
      "fansNFTContract():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  sellingRoyalties(
    param0: BigInt
  ): FanszoidMarketplace__sellingRoyaltiesResult {
    let result = super.call(
      "sellingRoyalties",
      "sellingRoyalties(uint256):(address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new FanszoidMarketplace__sellingRoyaltiesResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_sellingRoyalties(
    param0: BigInt
  ): ethereum.CallResult<FanszoidMarketplace__sellingRoyaltiesResult> {
    let result = super.tryCall(
      "sellingRoyalties",
      "sellingRoyalties(uint256):(address,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new FanszoidMarketplace__sellingRoyaltiesResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }
}

export class BuyMarketTicketCall extends ethereum.Call {
  get inputs(): BuyMarketTicketCall__Inputs {
    return new BuyMarketTicketCall__Inputs(this);
  }

  get outputs(): BuyMarketTicketCall__Outputs {
    return new BuyMarketTicketCall__Outputs(this);
  }
}

export class BuyMarketTicketCall__Inputs {
  _call: BuyMarketTicketCall;

  constructor(call: BuyMarketTicketCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get seller(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class BuyMarketTicketCall__Outputs {
  _call: BuyMarketTicketCall;

  constructor(call: BuyMarketTicketCall) {
    this._call = call;
  }
}

export class ConfigureCall extends ethereum.Call {
  get inputs(): ConfigureCall__Inputs {
    return new ConfigureCall__Inputs(this);
  }

  get outputs(): ConfigureCall__Outputs {
    return new ConfigureCall__Outputs(this);
  }
}

export class ConfigureCall__Inputs {
  _call: ConfigureCall;

  constructor(call: ConfigureCall) {
    this._call = call;
  }

  get _fansNFTContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConfigureCall__Outputs {
  _call: ConfigureCall;

  constructor(call: ConfigureCall) {
    this._call = call;
  }
}

export class CreateEventForOrganizerCall extends ethereum.Call {
  get inputs(): CreateEventForOrganizerCall__Inputs {
    return new CreateEventForOrganizerCall__Inputs(this);
  }

  get outputs(): CreateEventForOrganizerCall__Outputs {
    return new CreateEventForOrganizerCall__Outputs(this);
  }
}

export class CreateEventForOrganizerCall__Inputs {
  _call: CreateEventForOrganizerCall;

  constructor(call: CreateEventForOrganizerCall) {
    this._call = call;
  }

  get organizer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get uri(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateEventForOrganizerCall__Outputs {
  _call: CreateEventForOrganizerCall;

  constructor(call: CreateEventForOrganizerCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DeleteEventCall extends ethereum.Call {
  get inputs(): DeleteEventCall__Inputs {
    return new DeleteEventCall__Inputs(this);
  }

  get outputs(): DeleteEventCall__Outputs {
    return new DeleteEventCall__Outputs(this);
  }
}

export class DeleteEventCall__Inputs {
  _call: DeleteEventCall;

  constructor(call: DeleteEventCall) {
    this._call = call;
  }

  get eventId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DeleteEventCall__Outputs {
  _call: DeleteEventCall;

  constructor(call: DeleteEventCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class ModifyMarketRoyaltyOnEventCall extends ethereum.Call {
  get inputs(): ModifyMarketRoyaltyOnEventCall__Inputs {
    return new ModifyMarketRoyaltyOnEventCall__Inputs(this);
  }

  get outputs(): ModifyMarketRoyaltyOnEventCall__Outputs {
    return new ModifyMarketRoyaltyOnEventCall__Outputs(this);
  }
}

export class ModifyMarketRoyaltyOnEventCall__Inputs {
  _call: ModifyMarketRoyaltyOnEventCall;

  constructor(call: ModifyMarketRoyaltyOnEventCall) {
    this._call = call;
  }

  get eventId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get newRoyalty(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ModifyMarketRoyaltyOnEventCall__Outputs {
  _call: ModifyMarketRoyaltyOnEventCall;

  constructor(call: ModifyMarketRoyaltyOnEventCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PublishEventTicketsCall extends ethereum.Call {
  get inputs(): PublishEventTicketsCall__Inputs {
    return new PublishEventTicketsCall__Inputs(this);
  }

  get outputs(): PublishEventTicketsCall__Outputs {
    return new PublishEventTicketsCall__Outputs(this);
  }
}

export class PublishEventTicketsCall__Inputs {
  _call: PublishEventTicketsCall;

  constructor(call: PublishEventTicketsCall) {
    this._call = call;
  }

  get eventId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get ticketTypesCount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get ticketIds(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get publishingAskingPrices(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get publishingCreatorRoyalties(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get publisher(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class PublishEventTicketsCall__Outputs {
  _call: PublishEventTicketsCall;

  constructor(call: PublishEventTicketsCall) {
    this._call = call;
  }
}

export class RemoveAskCall extends ethereum.Call {
  get inputs(): RemoveAskCall__Inputs {
    return new RemoveAskCall__Inputs(this);
  }

  get outputs(): RemoveAskCall__Outputs {
    return new RemoveAskCall__Outputs(this);
  }
}

export class RemoveAskCall__Inputs {
  _call: RemoveAskCall;

  constructor(call: RemoveAskCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveAskCall__Outputs {
  _call: RemoveAskCall;

  constructor(call: RemoveAskCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAskCall extends ethereum.Call {
  get inputs(): SetAskCall__Inputs {
    return new SetAskCall__Inputs(this);
  }

  get outputs(): SetAskCall__Outputs {
    return new SetAskCall__Outputs(this);
  }
}

export class SetAskCall__Inputs {
  _call: SetAskCall;

  constructor(call: SetAskCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get askingPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get seller(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class SetAskCall__Outputs {
  _call: SetAskCall;

  constructor(call: SetAskCall) {
    this._call = call;
  }
}

export class SetEventUriCall extends ethereum.Call {
  get inputs(): SetEventUriCall__Inputs {
    return new SetEventUriCall__Inputs(this);
  }

  get outputs(): SetEventUriCall__Outputs {
    return new SetEventUriCall__Outputs(this);
  }
}

export class SetEventUriCall__Inputs {
  _call: SetEventUriCall;

  constructor(call: SetEventUriCall) {
    this._call = call;
  }

  get eventId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get uri(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetEventUriCall__Outputs {
  _call: SetEventUriCall;

  constructor(call: SetEventUriCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}
